### Info
### Description: Rest Client in Visual Studio Code

### Variables
@baseUrl = http://localhost:8000
@apiVersion = v1
@uFirstName = "John"
@uLastName = "Doe"
@uEmail = "john.doe.1234567890@example.com"
@uEmail2 = "john.for.doe.1234567890@example.com"
@uPassword = "passw@rdJ0hnD0e"
# @accessToken=jwt....

### Login
#### create new auth
# @name createUserAuth
POST {{baseUrl}}/api/{{apiVersion}}/register HTTP/1.1
Content-Type: application/json
Accept: application/json

{
    "firstname": {{uFirstName}},
    "lastname": {{uLastName}},
    "email": {{uEmail}},
    "password": {{uPassword}},
    "sector_id": 1,
    "contact_feedback": 1,
    "contact_news": 1
}

### Variables jwt token
# @accessToken = {{createUserAuth.response.body.$.access_token}}
@accessToken = {{loginUsernamePassword.response.body.$.access_token}}

### Access Token
# @name loginUsernamePassword
POST {{baseUrl}}/api/{{apiVersion}}/auth HTTP/1.1
Content-Type: application/json
Accept: application/json

{
    "email": {{uEmail}},
    "password": {{uPassword}}
}

# ### Variables jwt token
# @accessToken = {{loginUsernamePassword.response.body.$.access_token}}

### Logout
POST {{baseUrl}}/api/{{apiVersion}}/logout HTTP/1.1
Content-Type: application/json
Authorization: Bearer {{accessToken}}


### USERS
#### create new user
POST {{baseUrl}}/api/{{apiVersion}}/users HTTP/1.1
Content-Type: application/json
Accept: application/json
Authorization: Bearer {{accessToken}}

{
    "firstname": {{uFirstName}},
    "lastname": {{uLastName}},
    "email": {{uEmail2}},
    "password": {{uPassword}}
}

### PERMISSIONS
#### get all permissions
GET {{baseUrl}}/api/{{apiVersion}}/permissions HTTP/1.1
Content-Type: application/json
Authorization: Bearer {{accessToken}}

#### get permission by id
GET {{baseUrl}}/api/{{apiVersion}}/permissions/1 HTTP/1.1
Content-Type: application/json
Authorization: Bearer {{accessToken}}

#### create new permission
POST {{baseUrl}}/api/{{apiVersion}}/permissions HTTP/1.1
Content-Type: application/json
Accept: application/json
Authorization: Bearer {{accessToken}}

{
    "name" : "test"
}

#### update permission by id
PATCH {{baseUrl}}/api/{{apiVersion}}/permissions/6 HTTP/1.1
Content-Type: application/json
Accept: application/json
Authorization: Bearer {{accessToken}}

{
    "name" : "test2"
}

#### delete permission by id
DELETE {{baseUrl}}/api/{{apiVersion}}/permissions/6 HTTP/1.1
Content-Type: application/json
Authorization: Bearer {{accessToken}}

### USERS
#### get all users
GET {{baseUrl}}/api/{{apiVersion}}/users HTTP/1.1
Content-Type: application/json
Authorization: Bearer {{accessToken}}

#### get user by id
GET {{baseUrl}}/api/{{apiVersion}}/users/2 HTTP/1.1
Content-Type: application/json
Authorization: Bearer {{accessToken}}

#### create new user
POST {{baseUrl}}/api/{{apiVersion}}/users HTTP/1.1
Content-Type: application/json
Accept: application/json
Authorization: Bearer {{accessToken}}

{
    "firstname": "john2",
    "lastname": "doe2",
    "email": "john.doe.test.123456789@test.com",
    "password": "Passw@rd1!"
}

#### update user
PATCH {{baseUrl}}/api/{{apiVersion}}/users/1 HTTP/1.1
Content-Type: application/json
Accept: application/json
Authorization: Bearer {{accessToken}}

{
    "firstname": "john23",
    "lastname": "doe2",
    "email": "john.doe2.test.123456789@test.com",
    "password": "Passw@rd1!"
}

#### delete user by id
DELETE {{baseUrl}}/api/{{apiVersion}}/users/12 HTTP/1.1
Content-Type: application/json
Authorization: Bearer {{accessToken}}

### TEAMS
#### get all teams
GET {{baseUrl}}/api/{{apiVersion}}/teams HTTP/1.1
Content-Type: application/json
Authorization: Bearer {{accessToken}}

#### get one team by id
GET {{baseUrl}}/api/{{apiVersion}}/teams/1 HTTP/1.1
Content-Type: application/json
Authorization: Bearer {{accessToken}}

#### create a new team
POST {{baseUrl}}/api/{{apiVersion}}/teams HTTP/1.1
Content-Type: application/json
Accept: application/json
Authorization: Bearer {{accessToken}}

{
    "name": "Test Team Ltd", 
    "enabled": 1,
    "allows_messaging": 1,
    "workflow_enabled": 1,
    "access_requests_management": 1,
    "uses_5_safes": 1,
    "is_admin": 1,
    "member_of": 1001,
    "contact_point": "dinos345@mail.com",
    "application_form_updated_by": "Someone Somewhere",
    "application_form_updated_on": "2023-04-06 15:44:41",
    "notifications": []
}

### Review
#### get all reviews
GET {{baseUrl}}/api/{{apiVersion}}/reviews HTTP/1.1
Content-Type: application/json
Authorization: Bearer {{accessToken}}

#### get review by id
GET {{baseUrl}}/api/{{apiVersion}}/reviews/1 HTTP/1.1
Content-Type: application/json
Authorization: Bearer {{accessToken}}

#### add new review
POST {{baseUrl}}/api/{{apiVersion}}/reviews HTTP/1.1
Content-Type: application/json
Accept: application/json
Authorization: Bearer {{accessToken}}

{
    "tool_id": 1,
    "user_id" : 1,
    "rating" : 4,
    "review_text": "Similique provident natus facere eveniet facere. Cumque corporis et cumque consequatur.",
    "review_state": "active"
}

#### update review
PUT {{baseUrl}}/api/{{apiVersion}}/reviews/11 HTTP/1.1
Content-Type: application/json
Accept: application/json
Authorization: Bearer {{accessToken}}

{
    "tool_id": 1,
    "user_id" : 1,
    "rating" : 5,
    "review_text": "Similique provident natus facere eveniet facere. Cumque corporis et cumque consequatur.",
    "review_state": "active"
}

#### update review
DELETE {{baseUrl}}/api/{{apiVersion}}/reviews/11 HTTP/1.1
Content-Type: application/json
Accept: application/json
Authorization: Bearer {{accessToken}}

### Collections 
#### get all collections
GET {{baseUrl}}/api/{{apiVersion}}/collections HTTP/1.1
Content-Type: application/json
Authorization: Bearer {{accessToken}}

#### get collection by id
GET {{baseUrl}}/api/{{apiVersion}}/collections/1 HTTP/1.1
Content-Type: application/json
Authorization: Bearer {{accessToken}}

#### add new collection
POST {{baseUrl}}/api/{{apiVersion}}/collections HTTP/1.1
Content-Type: application/json
Accept: application/json
Authorization: Bearer {{accessToken}}

{
    "name": "covid",
    "description" : "Dolorem voluptas consequatur nihil illum et sunt libero.",
    "image_link" : "https://via.placeholder.com/640x480.png/0022bb?text=animals+cumque",
    "enabled": true,
    "keywords": "key words",
    "public": true,
    "counter": 123
}

#### update collection
PUT {{baseUrl}}/api/{{apiVersion}}/collections/12 HTTP/1.1
Content-Type: application/json
Accept: application/json
Authorization: Bearer {{accessToken}}

{
    "name": "covid 2",
    "description" : "Dolorem voluptas consequatur nihil illum et sunt libero.",
    "image_link" : "https://via.placeholder.com/640x480.png/0022bb?text=animals+cumque",
    "enabled": true,
    "keywords": "key words",
    "public": true,
    "counter": 123
}

#### delete collection
DELETE {{baseUrl}}/api/{{apiVersion}}/collections/11 HTTP/1.1
Content-Type: application/json
Accept: application/json
Authorization: Bearer {{accessToken}}


### TAGS
#### get all tags
GET {{baseUrl}}/api/{{apiVersion}}/tags HTTP/1.1
Content-Type: application/json
Authorization: Bearer {{accessToken}}

#### get one tag by id
GET {{baseUrl}}/api/{{apiVersion}}/tags/1 HTTP/1.1
Content-Type: application/json
Authorization: Bearer {{accessToken}}

#### create a new tag
POST {{baseUrl}}/api/{{apiVersion}}/tags HTTP/1.1
Content-Type: application/json
Accept: application/json
Authorization: Bearer {{accessToken}}

{
    "type": "Type Test",
    "enabled": 1,
    "description": "type for test"
}

#### update tag
PUT {{baseUrl}}/api/{{apiVersion}}/tags/1 HTTP/1.1
Content-Type: application/json
Accept: application/json
Authorization: Bearer {{accessToken}}

{
    "type": "Something",
    "enabled": 1,
    "description": "Something"
}

#### delete tag by id
DELETE {{baseUrl}}/api/{{apiVersion}}/tags/2 HTTP/1.1
Content-Type: application/json
Accept: application/json
Authorization: Bearer {{accessToken}}


### APPLICATIONS
#### get all applications
GET {{baseUrl}}/api/{{apiVersion}}/applications HTTP/1.1
Content-Type: application/json
Authorization: Bearer {{accessToken}}

#### get one application by id
GET {{baseUrl}}/api/{{apiVersion}}/applications/51 HTTP/1.1
Content-Type: application/json
Authorization: Bearer {{accessToken}}

#### create application
POST {{baseUrl}}/api/{{apiVersion}}/applications HTTP/1.1
Content-Type: application/json
Accept: application/json
Authorization: Bearer {{accessToken}}

{
    "name": "Hello World",
    "image_link": "https://via.placeholder.com/640x480.png/0022dd?text=animals+aliquam",
    "description": "Praesentium ut et quae suscipit ut quo adipisci. Enim ut tenetur ad omnis ut consequatur. Aliquid officiis expedita rerum.",
    "team_id": 5,
    "user_id": 2,
    "enabled": true
}

#### update application
PUT {{baseUrl}}/api/{{apiVersion}}/applications/51 HTTP/1.1
Content-Type: application/json
Accept: application/json
Authorization: Bearer {{accessToken}}

{
    "name": "Hello World Update sdsd",
    "image_link": "https://via.placeholder.com/640x480.png/0022dd?text=animals+aliquam+Update",
    "description": "Praesentium ut et quae suscipit ut quo adipisci. Update.",
    "team_id": 1,
    "user_id": 3,
    "enabled": true,
    "tags": [1,2],
    "permissions": [3,2]
}

#### edit application
PATCH {{baseUrl}}/api/{{apiVersion}}/applications/51 HTTP/1.1
Content-Type: application/json
Accept: application/json
Authorization: Bearer {{accessToken}}

{
    "name": "Hello World PATCH",
    "app_id": "obmWCcsccdxH5iHgLTJDZNXNkyW1ZxZ4PATCH",
    "client_id": "iem4i3geb1FxehvvQBlSOZ2A6SPATCH",
    "image_link": "https://via.placeholder.com/640x480.png/0022dd?text=animals+aliquam+PATCH",
    "description": "Praesentium ut et quae suscipit ut quo adipisci. PATCH."
}

#### delete application by id
DELETE {{baseUrl}}/api/{{apiVersion}}/applications/51 HTTP/1.1
Content-Type: application/json
Accept: application/json
Authorization: Bearer {{accessToken}}


### DATASETS
#### get all datasets
GET {{baseUrl}}/api/{{apiVersion}}/datasets HTTP/1.1
Content-Type: application/json
Authorization: Bearer {{accessToken}}

#### get one dataset by id
GET {{baseUrl}}/api/{{apiVersion}}/datasets/1 HTTP/1.1
Content-Type: application/json
Authorization: Bearer {{accessToken}}

#### create application
POST {{baseUrl}}/api/{{apiVersion}}/datasets HTTP/1.1
Content-Type: application/json
Accept: application/json
Authorization: Bearer {{accessToken}}

{
    "team_id": 1,
    "user_id": 3,
    "label": "label dataset for test",
    "short_description": "lorem ipsum",
    "data": {
        "datasetv2": {
            "identifier": "bd18eb49-9789-4ed3-a6c1-7b4f851ec2e7",
            "version": "1.0.0",
            "issued": "12/04/2022",
            "modified": "12/04/2022",
            "revisions": [],
            "summary": {
                "title": "Test Urinary tract infections acute presentations: microbiology, treatment, outcome",
                "abstract": "Acute presentations of UTIs (2000 to date). Deeply phenotyped, longitudinal granular data. Serial acuity, physiology, microbiology cultures, blood parameters, treatments, interventions, outcomes. Presenting complaints. Catheterisation status.",
                "publisher": {
                    "identifier": "607db9c5e1f9d3704d570d5f",
                    "name": "PIONEER",
                    "logo": "",
                    "description": "",
                    "contactPoint": [],
                    "memberOf": "HUB",
                    "accessRights": [],
                    "deliveryLeadTime": "",
                    "accessService": "",
                    "accessRequestCost": "",
                    "dataUseLimitation": [],
                    "dataUseRequirements": []
                },
                "contactPoint": "PIONEER@UHB.NHS.UK",
                "keywords": [
                    "test",
                    "Urinary Tract Infection",
                    "Infection",
                    "UTI",
                    "Antibiotics"
                ],
                "alternateIdentifiers": [],
                "doiName": ""
            },
            "documentation": {
                "description": "Test Background: A urinary tract infection (UTI) is a common infection that affects the bladder (cystitis), urethra (urethritis) or kidneys (pyelonephritis). They are more prevalent in women, and the incidence in women over 65 years old is double the rate compared with the overall female population. Catheterisation is known to affect the likelihood of infection. The National Institute for Clinical Excellence suggests that UTIs in the elderly are often over-diagnosed and over-treated. This has led to NHS England requiring a reduction in the number of Trimethoprim prescriptions prescribed to patients over 70 years old. \n\nPIONEER geography: The West Midlands (WM) has a population of 5.9 million and includes a diverse ethnic and socio-economic mix.  \n\nEHR: UHB is one of the largest NHS Trusts in England, providing direct acute services and specialist care across four hospital sites, with 2.2 million patient episodes per year, 2750 beds and an expanded 250 ITU bed capacity during COVID. UHB runs a fully electronic healthcare record (EHR) (PICS; Birmingham Systems), a shared primary and secondary care record (Your Care Connected) and a patient portal “My Health”. \n\nScope: All hospitalised patients from 2000 onwards, curated to focus on Urinary tract infection. Longitudinal and individually linked, so that the preceding and subsequent health journey can be mapped and healthcare utilisation prior to and after admission understood. The dataset includes highly granular patient demographics and co-morbidities taken from ICD-10 and SNOMED-CT codes. Serial, structured data pertaining to acute care process (timings, staff grades, specialty review, wards and triage). Along with presenting complaints, outpatients admissions, microbiology results, referrals, procedures, therapies, all physiology readings (pulse, blood pressure, respiratory rate, oxygen saturations and others), all blood results (urea, albumin, platelets, white blood cells and others). This dataset includes all prescribed and administered treatments including antibiotics, bacterial resistance patterns from microbiology assessments and outcomes. Linked images are also available (radiographs, CT scans, MRI). \n\nAvailable supplementary data: Matched controls; ambulance, OMOP data, synthetic data. \n\nAvailable supplementary support: Analytics, Model build, validation and refinement; A.I.; Data partner support for ETL (extract, transform and load) process, Clinical expertise, Patient and end-user access, Purchaser access, Regulatory requirements, Data-driven trials, “fast screen” services. ",
                "associatedMedia": [],
                "isPartOf": []
            },
            "coverage": {
                "spatial": [
                    "United Kingdom,England,West Midlands"
                ],
                "typicalAgeRange": "0-112",
                "physicalSampleAvailability": [
                    "NOT AVAILABLE"
                ],
                "followup": "OTHER",
                "pathway": "Test Data is representative of the multi-ethnicity population within the West Midlands (42% non white). Data includes all patients admitted during this timeframe, with National data Opt Outs applied, and therefore is representative of admissions to secondary care. Data focuses on in-patient stay in hospital during the acute episode but can be supplemented on request to include previous and subsequent hospital contacts (including outpatient appointments) and ambulance, 111, 999 data. "
            },
            "provenance": {
                "origin": {
                    "purpose": [
                        "CARE"
                    ],
                    "source": [
                        "EPR"
                    ],
                    "collectionSituation": [
                        "ACCIDENT AND EMERGENCY",
                        "OUTPATIENTS",
                        "IN-PATIENTS"
                    ]
                },
                "temporal": {
                    "accrualPeriodicity": "QUARTERLY",
                    "distributionReleaseDate": "20/01/2022",
                    "startDate": "12/01/2000",
                    "endDate": "01/01/2022",
                    "timeLag": "OTHER"
                }
            },
            "accessibility": {
                "usage": {
                    "dataUseLimitation": [
                        "RESEARCH USE ONLY"
                    ],
                    "dataUseRequirements": [
                        "PROJECT SPECIFIC RESTRICTIONS"
                    ],
                    "resourceCreator": [
                        "Test This publication uses data from PIONEER, an ethically approved database and analytical environment (East Midlands Derby Research Ethics 20/EM/0158)"
                    ],
                    "investigations": [],
                    "isReferencedBy": []
                },
                "access": {
                    "accessRights": [
                        "https://www.pioneerdatahub.co.uk/data/data-request-process/"
                    ],
                    "accessService": "Trusted Research Environments (TRE) are built using Microsoft Azure services and hosted in the UK to provide research teams a safe, secure and agile environment which allows users to quickly analyse, interpret and form an enriched view of primary care information through a range of integrated datasets.\n\nHealth data collated from multiple sources is ingested into a secure data lake which will then allow subsets of data to be made available to research teams on approval of a data request. Once approved a customer specific TRE is made available with a standard set of leading analytical tools from Microsoft including Azure Databricks, Azure Machine Learning, Azure SQL and Azure Synapse (for large-scale data warehouses). Specific tools can be provided at an additional cost over the standard platform data access charge and the PIONEER team will work with you to determine your exact needs.\n\nAccess to the TRE is managed using the latest virtual desktop technology to provide a safe and secure end-user experience.  By utilising leading edge design PIONEER are able to create TREs rapidly to enable us to service any customer requirement.",
                    "accessRequestCost": [
                        "www.pioneerdatahub.co.uk/data/data-services-costs/"
                    ],
                    "deliveryLeadTime": "1-2 MONTHS",
                    "jurisdiction": [
                        "GB-ENG"
                    ],
                    "dataProcessor": "NOT APPLICABLE",
                    "dataController": "University Hospitals Birmingham NHS Foundation Trust"
                },
                "formatAndStandards": {
                    "vocabularyEncodingScheme": [
                        "SNOMED CT",
                        "OPCS4",
                        "ICD10"
                    ],
                    "conformsTo": [
                        "LOCAL"
                    ],
                    "language": [
                        "en"
                    ],
                    "format": [
                        "SQL"
                    ]
                }
            },
            "enrichmentAndLinkage": {
                "qualifiedRelation": [],
                "derivation": [
                    "Not Available"
                ],
                "tools": []
            },
            "observations": [
                {
                    "measuredProperty": "Count",
                    "observedNode": "EVENTS",
                    "measuredValue": "91568",
                    "disambiguatingDescription": "91,568 spells with patients with diabetes between 12-01-2000 and 01-01-2022",
                    "observationDate": "02/01/2022"
                }
            ]
        }
    }
}

#### delete application by id
DELETE {{baseUrl}}/api/{{apiVersion}}/datasets/4 HTTP/1.1
Content-Type: application/json
Accept: application/json
Authorization: Bearer {{accessToken}}

### ROLES
#### get all roles
GET {{baseUrl}}/api/{{apiVersion}}/roles HTTP/1.1
Content-Type: application/json
Authorization: Bearer {{accessToken}}

#### get one role by id
GET {{baseUrl}}/api/{{apiVersion}}/roles/2 HTTP/1.1
Content-Type: application/json
Authorization: Bearer {{accessToken}}

#### create role
POST {{baseUrl}}/api/{{apiVersion}}/roles HTTP/1.1
Content-Type: application/json
Accept: application/json
Authorization: Bearer {{accessToken}}

{
    "name": "this.is.a.new.role.4",
    "enabled": true,
    "permissions" : [
        "create",
        "read",
        "test",
        "test2"
    ]
}

#### update role
PUT {{baseUrl}}/api/{{apiVersion}}/roles/13 HTTP/1.1
Content-Type: application/json
Accept: application/json
Authorization: Bearer {{accessToken}}

{
    "name": "this.is.a.new.role",
    "enabled": true,
    "permissions" : [
        "create",
        "read",
        "test",
        "test2"
    ]
}

#### edit role
PATCH {{baseUrl}}/api/{{apiVersion}}/roles/13 HTTP/1.1
Content-Type: application/json
Accept: application/json
Authorization: Bearer {{accessToken}}

{
    "name": "this.is.a.new.role.y",
    "permissions" : [
        "enquiries.update"
    ]
}

#### delete role by id
DELETE {{baseUrl}}/api/{{apiVersion}}/roles/15 HTTP/1.1
Content-Type: application/json
Accept: application/json
Authorization: Bearer {{accessToken}}

### TEAMS - USERS - ROLES
#### add new user in team
POST {{baseUrl}}/api/{{apiVersion}}/teams/1/users HTTP/1.1
Content-Type: application/json
Accept: application/json
Authorization: Bearer {{accessToken}}

{
    "userId": 12,
    "roles" : [
        "custodian.team.admin",
        "custodian.metadata.manager"
    ]
}

#### update team - user - role
PUT {{baseUrl}}/api/{{apiVersion}}/teams/1/users/12 HTTP/1.1
Content-Type: application/json
Accept: application/json
Authorization: Bearer {{accessToken}}

{
    "roles" : {
        "custodian.metadata.manager": false,
        "metadata.editor": true,
        "dar.reviewer": true
    }
}

#### delete team - user - role
DELETE {{baseUrl}}/api/{{apiVersion}}/teams/1/users/12 HTTP/1.1
Content-Type: application/json
Accept: application/json
Authorization: Bearer {{accessToken}}


### Email Templates
#### get all email templates
GET {{baseUrl}}/api/{{apiVersion}}/emailtemplates HTTP/1.1
Content-Type: application/json
Authorization: Bearer {{accessToken}}

#### get one email template by id
GET {{baseUrl}}/api/{{apiVersion}}/emailtemplates/2 HTTP/1.1
Content-Type: application/json
# Authorization: Bearer {{accessToken}}

#### create email template
POST {{baseUrl}}/api/{{apiVersion}}/emailtemplates HTTP/1.1
Content-Type: application/json
Accept: application/json
Authorization: Bearer {{accessToken}}

{
    "identifier": "identifier email template",
    "subject": "subject email template",
    "body": "<mjml>...</mjml>",
    "enabled": true
}

#### update email template
PUT {{baseUrl}}/api/{{apiVersion}}/emailtemplates/17 HTTP/1.1
Content-Type: application/json
Accept: application/json
Authorization: Bearer {{accessToken}}

{
    "identifier": "identifier email template test",
    "subject": "subject email template test",
    "body": "<mjml>...</mjml>",
    "enabled": true
}

#### edit email template
PATCH {{baseUrl}}/api/{{apiVersion}}/emailtemplates/17 HTTP/1.1
Content-Type: application/json
Accept: application/json
Authorization: Bearer {{accessToken}}

{
    "identifier": "identifier email template edit2",
    "subject": "subject email template edit",
    "body": "<mjml>...</mjml>"
}

#### delete email template
DELETE {{baseUrl}}/api/{{apiVersion}}/emailtemplates/16 HTTP/1.1
Content-Type: application/json
Accept: application/json
Authorization: Bearer {{accessToken}}


### Team Notifications
#### create notifications for team
POST {{baseUrl}}/api/{{apiVersion}}/teams/1/notifications HTTP/1.1
Content-Type: application/json
Accept: application/json
Authorization: Bearer {{accessToken}}

{
    "notification_type": "applicationSubmitted",
    "message": "Some message here applicationSubmitted",
    "opt_in": true,
    "enabled": true,
    "email": "joe1@example.com"
}

#### update notifications for team
PUT {{baseUrl}}/api/{{apiVersion}}/teams/1/notifications/200 HTTP/1.1
Content-Type: application/json
Accept: application/json
Authorization: Bearer {{accessToken}}

{
    "notification_type": "applicationSubmitted",
    "message": "Some message here applicationSubmitted",
    "opt_in": true,
    "enabled": true,
    "email": "joe2@example.com"
}

#### delete notifications for team
DELETE {{baseUrl}}/api/{{apiVersion}}/teams/1/notifications/200 HTTP/1.1
Content-Type: application/json
Accept: application/json
Authorization: Bearer {{accessToken}}


### Federation Team Notifications
#### get all federations for team
GET {{baseUrl}}/api/{{apiVersion}}/teams/13/federations HTTP/1.1
Content-Type: application/json
Authorization: Bearer {{accessToken}}

#### get one federations for team
GET {{baseUrl}}/api/{{apiVersion}}/teams/13/federations/51 HTTP/1.1
Content-Type: application/json
Authorization: Bearer {{accessToken}}

#### create federation for team
POST {{baseUrl}}/api/{{apiVersion}}/teams/13/federations HTTP/1.1
Content-Type: application/json
Accept: application/json
Authorization: Bearer {{accessToken}}

{
    "federation_type": "dataset",
    "auth_type": "bearer",
    "auth_secret_key": "path for secret key",
    "endpoint_baseurl": "https://fma-custodian-test-server-pljgro4dzq-nw.a.run.app",
    "endpoint_datasets": "/api/v1/noauth/datasets",
    "endpoint_dataset": "/api/v1/noauth/datasets/{id}",
    "run_time_hour": 11,
    "run_time_minute": 12,
    "enabled": true,
    "notification": [
        "t1@test.com",
        "t2@test.com",
        "t3@test.com"
    ]
}

#### update federation for team
PUT {{baseUrl}}/api/{{apiVersion}}/teams/13/federations/51 HTTP/1.1
Content-Type: application/json
Accept: application/json
Authorization: Bearer {{accessToken}}

{
    "federation_type": "dataset",
    "auth_type": "bearer",
    "auth_secret_key": "path for secret key2",
    "endpoint_baseurl": "https://fma-custodian-test-server-pljgro4dzq-nw.a.run.app",
    "endpoint_datasets": "/api/v1/noauth/datasets",
    "endpoint_dataset": "/api/v1/noauth/datasets/{id}",
    "run_time_hour": 11,
    "run_time_minute": 12,
    "enabled": true,
    "notification": [
        "t1@test.com",
        "y2@test.com",
        "y3@test.com"
    ]
}

#### edit federation for team
PATCH {{baseUrl}}/api/{{apiVersion}}/teams/13/federations/51 HTTP/1.1
Content-Type: application/json
Accept: application/json
Authorization: Bearer {{accessToken}}

{
    "federation_type": "dataset",
    "auth_type": "bearer",
    "auth_secret_key": "path for secret key4",
    "endpoint_baseurl": "https://fma-custodian-test-server-pljgro4dzq-nw.a.run.app/test2",
    "endpoint_datasets": "/api/v1/noauth/datasets",
    "endpoint_dataset": "/api/v1/noauth/datasets/{id}",
    "run_time_hour": 11,
    "run_time_minute": 12,
    "enabled": true,
    "notification": [
        "t1@test.com"
    ]
}

#### delete federation for team by federation_id and team_id
DELETE {{baseUrl}}/api/{{apiVersion}}/teams/13/federations/51 HTTP/1.1
Content-Type: application/json
Accept: application/json
Authorization: Bearer {{accessToken}}


## TESTS
### Test Email
#### test email
# GET {{baseUrl}}/api/{{apiVersion}}/email-test HTTP/1.1
# Content-Type: application/json

# // add in routes (api.v1.php)
# // use App\Jobs\SendEmailJob;
# // use App\Models\EmailTemplate;
# Route::get('email-test', function () {
#     $to = [
#         'to' => [
#             'email' => 'loki.sinclair@hdruk.ac.uk',
#             'name' => 'Loki Sinclair',
#         ],
#     ];

#     $template = EmailTemplate::where('identifier', '=', 'example_template')->first();

#     $replacements = [
#         '[[header_text]]' => 'Health Data Research UK',
#         '[[button_text]]' => 'Click me!',
#         '[[subheading_text]]' => 'Sub Heading Something or other',
#     ];

#     SendEmailJob::dispatch($to, $template, $replacements);
# });

#### send a test for jwt
POST {{baseUrl}}/api/{{apiVersion}}/test HTTP/1.1
Content-Type: application/json
Accept: application/json
Authorization: Bearer {{accessToken}}

#### send a test and check access
POST {{baseUrl}}/api/{{apiVersion}}/test/check_access HTTP/1.1
Content-Type: application/json
Accept: application/json
Authorization: Bearer {{accessToken}}




