{
    "openapi": "3.0.0",
    "info": {
        "title": "HDRUK Gateway API",
        "version": "2.0.0"
    },
    "paths": {
        "/api/v1/auth": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "AuthController@checkAuthorization",
                "description": "Generate Jwt based on email and password",
                "operationId": "authentication",
                "requestBody": {
                    "description": "Pass user credentials",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "email": {
                                        "description": "Email",
                                        "type": "string",
                                        "example": "user1@mail.com"
                                    },
                                    "password": {
                                        "description": "Password",
                                        "type": "string",
                                        "example": "password123!"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "access_token": {
                                            "type": "string",
                                            "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiIiLCJzdWIiOiJkYW4gbml0YSIsImF1ZCI6IiIsImlhdCI6IjE2ODAxNzg2NjEiLCJuYmYiOiIxNjgwMTc4NjYxIiwiZXhwIjoiMTY4MDE3ODY2MSIsImp0aSI6IiIsInVzZXIiOnsiaWQiOiIxIiwibmFtZSI6ImRhbiBuaXRhIiwiZW1haWwiOiJuaXRhLmRhbkBnbWFpbC5jb20ifX0.6DdcPUUhv4t2zVO4nfvRg5vp_EGeiJsr5ZBseAlL9Vw"
                                        },
                                        "token_type": {
                                            "type": "string",
                                            "example": "bearer"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Missing Property"
                    }
                }
            }
        },
        "/api/v1/register": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "RegisterController@create",
                "description": "Register New User with username and password",
                "operationId": "register",
                "requestBody": {
                    "description": "Pass user credentials",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "example": "Name"
                                    },
                                    "email": {
                                        "description": "Email",
                                        "type": "string",
                                        "example": "user1@mail.com"
                                    },
                                    "password": {
                                        "description": "Password",
                                        "type": "string",
                                        "example": "password123!"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "access_token": {
                                            "type": "string",
                                            "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiIiLCJzdWIiOiJkYW4gbml0YSIsImF1ZCI6IiIsImlhdCI6IjE2ODAxNzg2NjEiLCJuYmYiOiIxNjgwMTc4NjYxIiwiZXhwIjoiMTY4MDE3ODY2MSIsImp0aSI6IiIsInVzZXIiOnsiaWQiOiIxIiwibmFtZSI6ImRhbiBuaXRhIiwiZW1haWwiOiJuaXRhLmRhbkBnbWFpbC5jb20ifX0.6DdcPUUhv4t2zVO4nfvRg5vp_EGeiJsr5ZBseAlL9Vw"
                                        },
                                        "token_type": {
                                            "type": "string",
                                            "example": "bearer"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Missing Property"
                    }
                }
            }
        },
        "/api/v1/auth/{provider}": {
            "get": {
                "tags": [
                    "Authentication"
                ],
                "summary": "SocialLoginController@login",
                "description": "Login with Google / Linkedin / Azure",
                "operationId": "login",
                "parameters": [
                    {
                        "name": "provider",
                        "in": "path",
                        "description": "google, linkedin, azure",
                        "required": true,
                        "schema": {
                            "description": "provider",
                            "type": "string"
                        },
                        "example": "google"
                    }
                ],
                "responses": {
                    "302": {
                        "description": "redirect to main page"
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                }
            }
        },
        "/api/v1/tags/{id?}": {
            "get": {
                "tags": [
                    "Tags"
                ],
                "summary": "TagController@show",
                "description": "Get Tags or Get Tag by id",
                "operationId": "fetch",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "tag id",
                        "required": false,
                        "schema": {
                            "description": "tag id",
                            "type": "integer"
                        },
                        "example": "1"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "type": "array",
                                                "items": {}
                                            },
                                            "example": "[]"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/tags": {
            "post": {
                "tags": [
                    "Tags"
                ],
                "summary": "TagController@store",
                "description": "Create a new tag",
                "operationId": "create",
                "requestBody": {
                    "description": "Pass user credentials",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "type": {
                                        "type": "string",
                                        "example": "features"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "type": "array",
                                                "items": {}
                                            },
                                            "example": "[]"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Missing Property"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "patch": {
                "tags": [
                    "Tags"
                ],
                "summary": "TagController@store",
                "description": "Update tag",
                "operationId": "update",
                "requestBody": {
                    "description": "Pass user credentials",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "enabled": {
                                        "type": "boolean",
                                        "example": true
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Resource was updated with success."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Please provide a valid information in the request body."
                    },
                    "422": {
                        "description": "Resource not found."
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/tags/{id}": {
            "delete": {
                "tags": [
                    "Tags"
                ],
                "summary": "TagController@destroy",
                "description": "Delete Tag based in id",
                "operationId": "Delete",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "tag id",
                        "required": true,
                        "schema": {
                            "description": "tag id",
                            "type": "integer"
                        },
                        "example": "1"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Resource deleted successfully."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Error response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Resource not found."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/tags/{id}/restore": {
            "patch": {
                "tags": [
                    "Tags"
                ],
                "summary": "TagController@restore",
                "description": "Restore Tag based in id",
                "operationId": "restore",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "tag id",
                        "required": true,
                        "schema": {
                            "description": "tag id",
                            "type": "integer"
                        },
                        "example": "1"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Resource deleted successfully."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Error response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Resource not found."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearer": []
                    }
                ]
            }
        },
        "/status": {
            "get": {
                "summary": "Returns the API availability status",
                "description": "Used to ping the API. To test for availability",
                "operationId": "35ed67e35317de19734bbfc5bc73e0ce",
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    }
                }
            }
        }
    },
    "components": {
        "securitySchemes": {
            "bearerAuth": {
                "type": "http",
                "description": "Login with email and password to get the authentication token",
                "name": "Authorization",
                "in": "header",
                "bearerFormat": "JWT",
                "scheme": "bearer"
            }
        }
    }
}